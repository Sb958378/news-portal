{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchArticles } from '../api/NewsApi';\nexport const getArticles = createAsyncThunk('articles/getArticles', async ({\n  category,\n  page\n}) => {\n  const response = await fetchArticles(category, page);\n  return response.articles;\n});\nconst articlesSlice = createSlice({\n  name: 'articles',\n  initialState: {\n    articles: [],\n    status: null,\n    category: '',\n    page: 1\n  },\n  reducers: {\n    setCategory: (state, action) => {\n      state.category = action.payload;\n      state.page = 1;\n    },\n    setPage: (state, action) => {\n      state.page = action.payload;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(getArticles.pending, state => {\n      state.status = 'loading';\n    }).addCase(getArticles.fulfilled, (state, action) => {\n      state.status = 'success';\n      state.articles = action.payload;\n    }).addCase(getArticles.rejected, state => {\n      state.status = 'failed';\n    });\n  }\n});\nexport const {\n  setCategory,\n  setPage\n} = articlesSlice.actions;\nexport default articlesSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","fetchArticles","getArticles","category","page","response","articles","articlesSlice","name","initialState","status","reducers","setCategory","state","action","payload","setPage","extraReducers","builder","addCase","pending","fulfilled","rejected","actions","reducer"],"sources":["D:/react-news-portal/src/redux/articleSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { fetchArticles } from '../api/NewsApi';\r\n\r\nexport const getArticles = createAsyncThunk(\r\n  'articles/getArticles',\r\n  async ({ category, page }) => {\r\n    const response = await fetchArticles(category, page);\r\n    return response.articles;\r\n  }\r\n);\r\n\r\nconst articlesSlice = createSlice({\r\n  name: 'articles',\r\n  initialState: {\r\n    articles: [],\r\n    status: null,\r\n    category: '',\r\n    page: 1,\r\n  },\r\n  reducers: {\r\n    setCategory: (state, action) => {\r\n      state.category = action.payload;\r\n      state.page = 1;\r\n    },\r\n    setPage: (state, action) => {\r\n      state.page = action.payload;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getArticles.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(getArticles.fulfilled, (state, action) => {\r\n        state.status = 'success';\r\n        state.articles = action.payload;\r\n      })\r\n      .addCase(getArticles.rejected, (state) => {\r\n        state.status = 'failed';\r\n      });\r\n  },\r\n});\r\n\r\nexport const { setCategory, setPage } = articlesSlice.actions;\r\nexport default articlesSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,SAASC,aAAa,QAAQ,gBAAgB;AAE9C,OAAO,MAAMC,WAAW,GAAGH,gBAAgB,CACzC,sBAAsB,EACtB,OAAO;EAAEI,QAAQ;EAAEC;AAAK,CAAC,KAAK;EAC5B,MAAMC,QAAQ,GAAG,MAAMJ,aAAa,CAACE,QAAQ,EAAEC,IAAI,CAAC;EACpD,OAAOC,QAAQ,CAACC,QAAQ;AAC1B,CACF,CAAC;AAED,MAAMC,aAAa,GAAGP,WAAW,CAAC;EAChCQ,IAAI,EAAE,UAAU;EAChBC,YAAY,EAAE;IACZH,QAAQ,EAAE,EAAE;IACZI,MAAM,EAAE,IAAI;IACZP,QAAQ,EAAE,EAAE;IACZC,IAAI,EAAE;EACR,CAAC;EACDO,QAAQ,EAAE;IACRC,WAAW,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC9BD,KAAK,CAACV,QAAQ,GAAGW,MAAM,CAACC,OAAO;MAC/BF,KAAK,CAACT,IAAI,GAAG,CAAC;IAChB,CAAC;IACDY,OAAO,EAAEA,CAACH,KAAK,EAAEC,MAAM,KAAK;MAC1BD,KAAK,CAACT,IAAI,GAAGU,MAAM,CAACC,OAAO;IAC7B;EACF,CAAC;EACDE,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACjB,WAAW,CAACkB,OAAO,EAAGP,KAAK,IAAK;MACvCA,KAAK,CAACH,MAAM,GAAG,SAAS;IAC1B,CAAC,CAAC,CACDS,OAAO,CAACjB,WAAW,CAACmB,SAAS,EAAE,CAACR,KAAK,EAAEC,MAAM,KAAK;MACjDD,KAAK,CAACH,MAAM,GAAG,SAAS;MACxBG,KAAK,CAACP,QAAQ,GAAGQ,MAAM,CAACC,OAAO;IACjC,CAAC,CAAC,CACDI,OAAO,CAACjB,WAAW,CAACoB,QAAQ,EAAGT,KAAK,IAAK;MACxCA,KAAK,CAACH,MAAM,GAAG,QAAQ;IACzB,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEE,WAAW;EAAEI;AAAQ,CAAC,GAAGT,aAAa,CAACgB,OAAO;AAC7D,eAAehB,aAAa,CAACiB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}